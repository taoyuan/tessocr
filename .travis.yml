os:
  - linux
  - osx
# turn on new container-based infrastructure
sudo: required
language: cpp
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-4.8
    - g++-4.8
    - g++-4.8-multilib
    - gcc-multilib
    - tesseract-ocr
    - libleptonica-dev
    - libtesseract-dev
env:
  matrix:
  - TRAVIS_NODE_VERSION="0.10"
  - TRAVIS_NODE_VERSION="0.12"
  - TRAVIS_NODE_VERSION="4"
  - TRAVIS_NODE_VERSION="5"
  - TRAVIS_NODE_VERSION="0.10" ARCH="x86"
  - TRAVIS_NODE_VERSION="0.12" ARCH="x86"
  - TRAVIS_NODE_VERSION="4" ARCH="x86"
  - TRAVIS_NODE_VERSION="5" ARCH="x86"
  global:
#    - secure: nFQKlcfG1rV/kQm1EJtgQyRefZb6scdn/9epEaJgAyaqDRXHSZIFSuoOh4d/P5GC6V0yi6dA8I+XJsoRy29qG+JXWxN2enwjp16IbpUri9Z5H8uZPur1N6QPby9BX+PX5/4HU+KRgWtFDdfqqzbLmObXsxIUGtZtBbRY9otiUt8=
  exclude:
    - os: osx
      env: TRAVIS_NODE_VERSION="0.10" ARCH="x86"
    - os: osx
      env: TRAVIS_NODE_VERSION="0.12" ARCH="x86"
    - os: osx
      env: TRAVIS_NODE_VERSION="4" ARCH="x86"
    - os: osx
      env: TRAVIS_NODE_VERSION="5" ARCH="x86"

before_install:
  # install tesseract for osx
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew update; brew install tesseract; fi
  # install tessdata
  - wget https://tesseract-ocr.googlecode.com/files/tesseract-ocr-3.02.eng.tar.gz
  - tar -zxvf tesseract-ocr-3.02.eng.tar.gz
  - sudo mv ./tesseract-ocr/tessdata/* /usr/local/share/tessdata/
  # reinstall latest nvm
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
  - BASE_URL=$(node -p "v=parseInt(process.versions.node),(v>=1&&v<4?'https://iojs.org/dist/':'https://nodejs.org/dist/')+process.version")
  - X86_FILE=$(node -p "v=parseInt(process.versions.node),(v>=1&&v<4?'iojs':'node')+'-'+process.version+'-'+process.platform+'-x86'")
  # download node if testing x86 architecture
  - if [[ "$ARCH" == "x86" ]]; then wget $BASE_URL/$X86_FILE.tar.gz; tar -xf $X86_FILE.tar.gz; export PATH=$X86_FILE/bin:$PATH; fi
  # print versions
  - npm --version

install:
  # install cmake
  - wget --no-check-certificate https://www.cmake.org/files/v3.5/cmake-3.5.1-Linux-x86_64.sh
  - sudo sh cmake-3.5.1-Linux-x86_64.sh --skip-license --prefix=/usr
  #
  - if [[ $LINUX && "$CXX" = "g++" ]]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  # ensure source install works
  - npm install

script:
  # test our module
  - node tessocr.js
  - npm test
